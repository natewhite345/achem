from math import sqrt
import os
os.chdir("/home/natetheadequate/working/achem/lab-reports/lab8parta")
# Generated by ChatGPT
import polars as pl
import numpy as np
from pathlib import Path

# Get all processed CSV files
input_dir = Path(".")
processed_files = list(input_dir.glob("scanrateadjusted*.csv"))

extrema_results = []

# Find extrema for each file
for file in processed_files:
    df = pl.read_csv(file)
    current = df["Current (A)"].to_numpy()
    potential = df["Potential (V)"].to_numpy()
    
    # Find local maxima and minima
    peaks = (np.diff(np.sign(np.diff(current))) < 0).nonzero()[0] + 1
    troughs = (np.diff(np.sign(np.diff(current))) > 0).nonzero()[0] + 1
    
    # Store results
    extrema_results.append({
        "file": file.name,
        "maxima": list(zip(potential[peaks], current[peaks]))[0],
        "minima": list(zip(potential[troughs], current[troughs]))[0]
    })

# Print results
res = []
def make(ep2,ipa,ipc): 
    return {"ep2":ep2,"ipa_raw":ipa, "ipc_raw":ipc}
additionaldata = {
    "100":make(0.2301, 6.275, 47.18),
    "50":make(0.2272, 10.659, 38.00),
    "20": make(0.22696, 9.42282, 27.047)
}

rsplotdata = [[],[],[]]

acc = [[] for _ in range(3)]
for result in extrema_results:
    scanrate = result["file"].replace("scanrateadjusted","").replace(".csv","")
    ipc = -1*(additionaldata[scanrate]["ipc_raw"]+result["minima"][1]*1e6)
    ipa = additionaldata[scanrate]["ipa_raw"]+result["maxima"][1]*1e6
    ep2 = additionaldata[scanrate]["ep2"]
    epa = result["maxima"][0]
    epc = result["minima"][0]
    res += [
        scanrate, 
        epa, 
        epc,
        ep2,
        epa- ep2,
        ipa,
        ipc
    ]
    calcs = [result["maxima"][0]-result["minima"][0], ipc/ipa, epa-ep2]
    for i,c in enumerate(calcs):
        print(scanrate,i,c)
        acc[i] += [f"{scanrate} : {round(c,5)}"] 
    print(acc)
    rsplotdata[0]+=[sqrt(int(scanrate))]
    rsplotdata[1]+=[ipc]
    rsplotdata[2]+=[ipa]


    # print(f"File: {result['file']}")
    # print("Maxima:", result["maxima"])
    # print("Minima:", result["minima"])
    # print()
#print(*map(str, res))

import matplotlib.pyplot as plt
plt.figure()
plt.scatter(rsplotdata[0],rsplotdata[1])  # Convert to microamps
plt.xlabel("v^(1/2)")
plt.ylabel("I_pc (µA, Baseline Adjusted)")
plt.title(f"Randles-Sevcik Plot for Cathode")
plt.legend()
plt.grid(True)
plt.savefig(f"rscat.png")  # Save plot as PNG

plt.figure()
plt.scatter(rsplotdata[0],rsplotdata[1])  # Convert to microamps
plt.xlabel("v^(1/2)")
plt.ylabel("I_pa (µA, Baseline Adjusted)")
plt.title(f"Randles-Sevcik Plot for Anode")
plt.legend()
plt.grid(True)
plt.savefig(f"rsano.png")  # Save plot as PNG

print("+ "+ "\n+ ".join([", ".join(v) for v in acc]))
